// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1258301313"] = [{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/spork/v1.0.0/src/Spork/App.purs","end":[53,4]},"score":0,"packageName":"spork","name":"App","moduleName":"Spork.App","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["render",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","Html","Core"],"Html"]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"RCons","contents":["update",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"action"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","Transition"],"Transition"]},{"tag":"TypeVar","contents":"effects"}]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"action"}]}]}]},{"tag":"RCons","contents":["subs",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","Batch"],"Batch"]},{"tag":"TypeVar","contents":"subs"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"RCons","contents":["init",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","Transition"],"Transition"]},{"tag":"TypeVar","contents":"effects"}]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"action"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},"arguments":[["effects",null],["subs",null],["model",null],["action",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A specification for a Spork app:\n   * `render` - Renders a model to `Html` which yields actions via DOM events.\n   * `update` - Takes the current model and, with a new action, transitions to a new model while optionally running effects.\n   * `subs` - Determines the set of active subscriptions based on the model.\n   * `init` - Initial model and effects to kickstart the application.\n"}],"tag":"SearchResult"}]