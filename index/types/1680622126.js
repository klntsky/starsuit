// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1680622126"] = [{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/aff-coroutines/v7.0.0/src/Control/Coroutine/Aff.purs","end":[73,76]},"score":0,"packageName":"aff-coroutines","name":"produceAff","moduleName":"Control.Coroutine.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine","Aff"],"Emitter"]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A variant of `produce` where the setup and callback functions use the `Aff`\nmonad. This can be helpful in certain cases.\n\nFor example:\n\n```purescript\nproduceAff \\emitter -> do\n  delay $ Milliseconds 1000\n  emit emitter \"progress\"\n  delay $ Milliseconds 1000\n  close emitter \"finished\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/aff-coroutines/v7.0.0/src/Control/Coroutine/Aff.purs","end":[52,79]},"score":0,"packageName":"aff-coroutines","name":"produce","moduleName":"Control.Coroutine.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine","Aff"],"Emitter"]},{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Coroutine"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Producer` using an asynchronous callback.\n\nThe callback should provide zero or more values of type `a`, which will be\nemitted by the `Producer`, terminated by an optional value of type `r`. No values\nshould be provided after a value of type `r` has been provided.\n\nFor example:\n\n```purescript\nproduce \\emitter -> do\n  log \"Working...\"\n  emit emitter \"progress\"\n  log \"Done!\"\n  close emitter \"finished\"\n```\n"}],"tag":"SearchResult"}]