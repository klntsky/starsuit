// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["2064308007"] = [{"values":[{"sourceSpan":{"start":[84,1],"name":".spago/web-file/v2.3.0/src/Web/File/Blob.purs","end":[84,46]},"score":0,"packageName":"web-file","name":"slice'","moduleName":"Web.File.Blob","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"StartByte"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"EndByte"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"Blob"]}]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"Blob"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a new `Blob` object containing the data in the specified range\nof bytes of the source Blob.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[763,1],"name":".spago/optparse/v3.0.1/src/Text/PrettyPrint/Leijen.purs","end":[763,49]},"score":0,"packageName":"optparse","name":"renderSmart","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A slightly smarter rendering algorithm with more lookahead. It provides\nprovide earlier breaking on deeply nested structures\nFor example, consider this python-ish pseudocode:\n@fun(fun(fun(fun(fun([abcdefg, abcdefg])))))@\nIf we put a softbreak (+ nesting 2) after each open parenthesis, and align\nthe elements of the list to match the opening brackets, this will render with\n@renderPretty@ and a page width of 20 as:\n@\nfun(fun(fun(fun(fun([\n                    | abcdef,\n                    | abcdef,\n                    ]\n  )))))             |\n@\nWhere the 20c. boundary has been marked with |.\nBecause @renderPretty@ only uses one-line lookahead, it sees that the first\nline fits, and is stuck putting the second and third lines after the 20-c\nmark. In contrast, @renderSmart@ will continue to check that the potential\ndocument up to the end of the indentation level. Thus, it will format the\ndocument as:\n\n@\nfun(                |\n  fun(              |\n    fun(            |\n      fun(          |\n        fun([       |\n              abcdef,\n              abcdef,\n            ]       |\n  )))))             |\n@\nWhich fits within the 20c. boundary.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[727,1],"name":".spago/optparse/v3.0.1/src/Text/PrettyPrint/Leijen.purs","end":[727,50]},"score":0,"packageName":"optparse","name":"renderPretty","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"This is the default pretty printer which is used by 'show',\n'putDoc' and 'hPutDoc'. @(renderPretty ribbonfrac width x)@ renders\ndocument @x@ with a page width of @width@ and a ribbon width of\n@(ribbonfrac * width)@ characters. The ribbon width is the maximal\namount of non-indentation characters on a line. The parameter\n@ribbonfrac@ should be between @0.0@ and @1.0@. If it is lower or\nhigher, the ribbon width will be 0 or @width@ respectively.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[280,1],"name":".spago/optparse/v3.0.1/src/Text/PrettyPrint/Leijen.purs","end":[280,36]},"score":0,"packageName":"optparse","name":"enclose","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(enclose l r x)@ encloses document @x@ between\ndocuments @l@ and @r@ using @(\\<\\>)@.\n\n> enclose l r x   = l <> x <> r\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/psa-utils/v6.0.0/src/Psa/Printer/Default.purs","end":[52,57]},"score":0,"packageName":"psa-utils","name":"renderError","moduleName":"Psa.Printer.Default","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Psa","Types"],"PsaAnnotedError"]}]},{"tag":"TypeConstructor","contents":[["Psa","Printer"],"Rendered"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/psa-utils/v6.0.0/src/Psa/Printer/Default.purs","end":[49,59]},"score":0,"packageName":"psa-utils","name":"renderWarning","moduleName":"Psa.Printer.Default","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Psa","Types"],"PsaAnnotedError"]}]},{"tag":"TypeConstructor","contents":[["Psa","Printer"],"Rendered"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/yargs/v4.0.0/src/Node/Yargs/Setup.purs","end":[91,52]},"score":0,"packageName":"yargs","name":"version","moduleName":"Node.Yargs.Setup","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Node","Yargs","Setup"],"YargsSetup"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/node-fs/v5.0.1/src/Node/FS/Perms.purs","end":[150,41]},"score":0,"packageName":"node-fs","name":"mkPerms","moduleName":"Node.FS.Perms","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","FS","Perms"],"Perm"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","FS","Perms"],"Perm"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","FS","Perms"],"Perm"]}]},{"tag":"TypeConstructor","contents":[["Node","FS","Perms"],"Perms"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Perms` value. The arguments represent the owner's, group's, and\nother users' permission sets, respectively.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/express/v0.8.0/src/Node/Express/Test/Mock.purs","end":[87,73]},"score":0,"packageName":"express","name":"setRequestSignedCookie","moduleName":"Node.Express.Test.Mock","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[84,1],"name":".spago/express/v0.8.0/src/Node/Express/Test/Mock.purs","end":[84,67]},"score":0,"packageName":"express","name":"setRequestCookie","moduleName":"Node.Express.Test.Mock","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/express/v0.8.0/src/Node/Express/Test/Mock.purs","end":[78,63]},"score":0,"packageName":"express","name":"setBodyParam","moduleName":"Node.Express.Test.Mock","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/express/v0.8.0/src/Node/Express/Test/Mock.purs","end":[81,64]},"score":0,"packageName":"express","name":"setRouteParam","moduleName":"Node.Express.Test.Mock","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/express/v0.8.0/src/Node/Express/Test/Mock.purs","end":[69,67]},"score":0,"packageName":"express","name":"setRequestHeader","moduleName":"Node.Express.Test.Mock","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","Test","Mock"],"MockRequest"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/express/v0.8.0/src/Node/Express/Response.purs","end":[43,58]},"score":0,"packageName":"express","name":"setCookie","moduleName":"Node.Express.Response","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Types"],"CookieOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set cookie by its name using specified options (maxAge, path, etc).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/node-buffer/v6.0.0/src/Node/Buffer/Immutable.purs","end":[106,79]},"score":0,"packageName":"node-buffer","name":"slice","moduleName":"Node.Buffer.Immutable","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a new buffer slice that shares the memory of the original buffer.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/node-buffer/v6.0.0/src/Node/Buffer/Immutable.purs","end":[67,63]},"score":0,"packageName":"node-buffer","name":"read","moduleName":"Node.Buffer.Immutable","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"BufferValueType"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Reads a numeric value from a buffer at the specified offset.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/motsunabe/v2.0.0/src/Motsunabe.purs","end":[54,35]},"score":0,"packageName":"motsunabe","name":"best","moduleName":"Motsunabe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Motsunabe"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Motsunabe"],"Print"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/hyper/v0.11.0/src/Hyper/Cookies.purs","end":[118,68]},"score":0,"packageName":"hyper","name":"setCookieHeaderValue","moduleName":"Hyper.Cookies","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Hyper","Cookies"],"Name"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Hyper","Cookies"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Hyper","Cookies"],"CookieAttributes"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[194,1],"name":".spago/drawing/v4.0.0/src/Graphics/Drawing.purs","end":[194,52]},"score":0,"packageName":"drawing","name":"translate","moduleName":"Graphics.Drawing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Graphics","Drawing"],"Drawing"]}]},{"tag":"TypeConstructor","contents":[["Graphics","Drawing"],"Drawing"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a translation by providing the x and y distances.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[190,1],"name":".spago/drawing/v4.0.0/src/Graphics/Drawing.purs","end":[190,48]},"score":0,"packageName":"drawing","name":"scale","moduleName":"Graphics.Drawing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Graphics","Drawing"],"Drawing"]}]},{"tag":"TypeConstructor","contents":[["Graphics","Drawing"],"Drawing"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a scale transformation by providing the x and y scale factors.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/drawing/v4.0.0/src/Graphics/Drawing.purs","end":[67,46]},"score":0,"packageName":"drawing","name":"circle","moduleName":"Graphics.Drawing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Graphics","Drawing"],"Shape"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a circle from the left, top and radius parameters.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/drawing/v4.0.0/src/Graphics/Drawing/Font.purs","end":[21,49]},"score":0,"packageName":"drawing","name":"font","moduleName":"Graphics.Drawing.Font","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Graphics","Drawing","Font"],"FontFamily"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Graphics","Drawing","Font"],"FontOptions"]}]},{"tag":"TypeConstructor","contents":[["Graphics","Drawing","Font"],"Font"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Font`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[433,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[433,50]},"score":0,"packageName":"stringutils","name":"startsWith'","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Determine whether a string starts with a certain substring at a given\nposition.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[416,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[418,42]},"score":0,"packageName":"stringutils","name":"replaceAll","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"DEPRECATED: `Data.String.Utils.replaceAll`"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"DEPRECATED: This function is now available in `purescript-strings`.\n\nReplace all occurences of the first argument with the second argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[201,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[201,48]},"score":0,"packageName":"stringutils","name":"includes'","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Determine whether the second string argument contains the first one,\nbeginning the search at the given position.\nNote that this function handles Unicode as you would expect.\nNegative `position` values result in a search from the beginning of the\nstring.\n\nExample:\n```purescript\nincludes' \"𝟙\"  1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == true\nincludes' \"𝟙\"  2 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == false\nincludes' \"𝟡\" 10 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == false\n-- This behaviour is different from `String.prototype.includes`:\n-- \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\".includes(\"𝟡\", 10) == true\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[140,48]},"score":0,"packageName":"stringutils","name":"endsWith'","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Determine whether the second string ends with the first one\nbut search as if the string were only as long as the given argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/strings/v4.0.1/src/Data/String/Regex.purs","end":[99,62]},"score":0,"packageName":"strings","name":"replace","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Replaces occurences of the `Regex` with the first string. The replacement\nstring can include special replacement patterns escaped with `\"$\"`.\nSee [reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/strings/v4.0.1/src/Data/String/NonEmpty/Internal.purs","end":[148,81]},"score":0,"packageName":"strings","name":"replaceAll","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyReplacement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Replaces all occurences of the pattern with the replacement string.\n\n```purescript\nreplaceAll (Pattern \"<=\") (NonEmptyReplacement \"≤\") (NonEmptyString \"a <= b <= c\") == NonEmptyString \"a ≤ b ≤ c\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/strings/v4.0.1/src/Data/String/NonEmpty/Internal.purs","end":[139,78]},"score":0,"packageName":"strings","name":"replace","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyReplacement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Replaces the first occurence of the pattern with the replacement string.\n\n```purescript\nreplace (Pattern \"<=\") (NonEmptyReplacement \"≤\") (NonEmptyString \"a <= b <= c\") == NonEmptyString \"a ≤ b <= c\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/strings/v4.0.1/src/Data/String/Common.purs","end":[57,72]},"score":0,"packageName":"strings","name":"replaceAll","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Replacement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Replaces all occurences of the pattern with the replacement string.\n\n```purescript\nreplaceAll (Pattern \"<=\") (Replacement \"≤\") \"a <= b <= c\" == \"a ≤ b ≤ c\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/strings/v4.0.1/src/Data/String/Common.purs","end":[50,69]},"score":0,"packageName":"strings","name":"replace","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Replacement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Replaces the first occurence of the pattern with the replacement string.\n\n```purescript\nreplace (Pattern \"<=\") (Replacement \"≤\") \"a <= b <= c\" == \"a ≤ b <= c\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/quantities/v10.0.0/src/Data/Quantity.purs","end":[165,60]},"score":0,"packageName":"quantities","name":"approximatelyEqual","moduleName":"Data.Quantity","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Quantity"],"Quantity"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Quantity"],"Quantity"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether two quantities have matching units (or can be converted\nto the same representation) and test if the numerical values are\napproximately equal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/numbers/v7.0.0/src/Data/Number/Approximate.purs","end":[94,51]},"score":0,"packageName":"numbers","name":"eqAbsolute","moduleName":"Data.Number.Approximate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Number","Approximate"],"Tolerance"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compare two `Number`s and return `true` if they are equal up to the given\n(absolute) tolerance value. Note that this type of comparison is *not*\nscale-invariant. The relation induced by `(eqAbsolute (Tolerance eps))` is\nsymmetric and reflexive, but not transitive.\n\nExample:\n``` purs\n> (eqAbsolute (Tolerance 1.0)) 133.7 133.0\ntrue\n\n> (eqAbsolute (Tolerance 0.1)) 133.7 133.0\nfalse\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/numbers/v7.0.0/src/Data/Number/Approximate.purs","end":[44,50]},"score":0,"packageName":"numbers","name":"eqRelative","moduleName":"Data.Number.Approximate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Number","Approximate"],"Fraction"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compare two `Number`s and return `true` if they are equal up to the\ngiven *relative* error (`Fraction` parameter).\n\nThis comparison is scale-invariant, i.e. if `eqRelative frac x y`, then\n`eqRelative frac (s * x) (s * y)` for a given scale factor `s > 0.0`\n(unless one of x, y is exactly `0.0`).\n\nNote that the relation that `eqRelative frac` induces on `Number` is\nnot an equivalence relation. It is reflexive and symmetric, but not\ntransitive.\n\nExample:\n``` purs\n> (eqRelative (Fraction 0.01)) 133.7 133.0\ntrue\n\n> (eqRelative (Fraction 0.001)) 133.7 133.0\nfalse\n\n> (eqRelative (Fraction 0.01)) (0.1 + 0.2) 0.3\ntrue\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[202,1],"name":".spago/fuzzy/v0.2.1/src/Data/Fuzzy.purs","end":[202,52]},"score":0,"packageName":"fuzzy","name":"matchStr","moduleName":"Data.Fuzzy","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Fuzzy"],"FuzzyStr"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Function to match a string value against a string pattern\n\nArguments:\n\n- `ignoreCase`: flag for whether or not uppercase and lowercase values should be\n  considered the same or not\n- `pattern`: string of chars you wish to match for in `str`\n- `str`: string to search through for the chars in `pattern`\n\nReturns:\n\n`FuzzyStr` data type with properties useful for highlighting matches, sorting\na list of values, filtering out poor matches, etc.\n\nExamples:\n\n```\n> matchStr true \"foo bar\" \"fiz baz foo bar buz\"\nFuzzyStr\n  { original: \"fiz baz foo bar buz\"\n  , segmemnts: [ Left \"fiz baz \", Right \"foo bar\", Left \" buz\" ]\n  , distance: Distance 0 0 0 8 0 4\n  , ratio: 1 % 1\n  }\n\nSee `test/Main.purs` for more examples\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/datetime/v4.1.1/src/Data/Date.purs","end":[33,46]},"score":0,"packageName":"datetime","name":"canonicalDate","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Year"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Month"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date","Component"],"Day"]}]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Constructs a date from year, month, and day components. The resulting date\ncomponents may not be identical to the input values, as the date will be\ncanonicalised according to the Gregorian calendar. For example, date\nvalues for the invalid date 2016-02-31 will be corrected to 2016-03-02.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/arraybuffer/v10.0.2/src/Data/ArrayBuffer/ArrayBuffer.purs","end":[24,64]},"score":0,"packageName":"arraybuffer","name":"slice","moduleName":"Data.ArrayBuffer.ArrayBuffer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ByteOffset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ByteOffset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayBuffer"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a new `ArrayBuffer` whose contents are a copy of this ArrayBuffer's bytes from begin, inclusive, up to end, exclusive.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/css/v4.0.0/src/CSS/Stylesheet.purs","end":[114,47]},"score":0,"packageName":"css","name":"keyframesFromTo","moduleName":"CSS.Stylesheet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["CSS","Stylesheet"],"CSS"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["CSS","Stylesheet"],"CSS"]}]},{"tag":"TypeConstructor","contents":[["CSS","Stylesheet"],"CSS"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/css/v4.0.0/src/CSS/Render.purs","end":[152,48]},"score":0,"packageName":"css","name":"sepWith","moduleName":"CSS.Render","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/css/v4.0.0/src/CSS/ListStyle.purs","end":[16,73]},"score":0,"packageName":"css","name":"listStyle","moduleName":"CSS.ListStyle","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["CSS","ListStyle","Type"],"ListStyleType"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["CSS","ListStyle","Position"],"ListStylePosition"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["CSS","ListStyle","Image"],"ListStyleImage"]}]},{"tag":"TypeConstructor","contents":[["CSS","Stylesheet"],"CSS"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[515,1],"name":".spago/colors/v5.0.0/src/Color.purs","end":[515,54]},"score":0,"packageName":"colors","name":"Interpolator","moduleName":"Color","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A function that interpolates between two colors. It takes a start color,\nan end color, and a ratio in the interval [0.0, 1.0]. It returns the\nmixed color.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[257,1],"name":".spago/colors/v5.0.0/src/Color.purs","end":[257,43]},"score":0,"packageName":"colors","name":"lch","moduleName":"Color","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Color` from lightness, chroma and hue coordinates in the CIE LCh\ncolor space. This is a cylindrical transform of the Lab color space.\nNote: See documentation for `xyz`. The same restrictions apply here.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[240,1],"name":".spago/colors/v5.0.0/src/Color.purs","end":[240,43]},"score":0,"packageName":"colors","name":"lab","moduleName":"Color","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Color` from L, a and b coordinates coordinates in the Lab color\nspace.\nNote: See documentation for `xyz`. The same restrictions apply here.\n\nSee: https://en.wikipedia.org/wiki/Lab_color_space\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/colors/v5.0.0/src/Color.purs","end":[217,43]},"score":0,"packageName":"colors","name":"xyz","moduleName":"Color","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Color` from XYZ coordinates in the CIE 1931 color space. Note\nthat a `Color` always represents a color in the sRGB gamut (colors that\ncan be represented on a typical computer screen) while the XYZ color space\nis bigger. This function will tend to create fully saturated colors at the\nedge of the sRGB gamut if the coordinates lie outside the sRGB range.\n\nSee:\n- https://en.wikipedia.org/wiki/CIE_1931_color_space\n- https://en.wikipedia.org/wiki/SRGB\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[205,1],"name":".spago/colors/v5.0.0/src/Color.purs","end":[205,40]},"score":0,"packageName":"colors","name":"hsv","moduleName":"Color","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Color` from Hue, Saturation and Value values. The Hue is\ngiven in degrees, as a `Number` between 0.0 and 360.0. Both Saturation and\nValue are numbers between 0.0 and 1.0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[187,1],"name":".spago/colors/v5.0.0/src/Color.purs","end":[187,43]},"score":0,"packageName":"colors","name":"hsl","moduleName":"Color","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Color` from Hue, Saturation and Lightness values. The Hue is\ngiven in degrees, as a `Number` between 0.0 and 360.0. Both Saturation and\nLightness are numbers between 0.0 and 1.0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[172,1],"name":".spago/colors/v5.0.0/src/Color.purs","end":[172,44]},"score":0,"packageName":"colors","name":"rgb'","moduleName":"Color","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Color` from RGB values between 0.0 and 1.0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/colors/v5.0.0/src/Color.purs","end":[161,34]},"score":0,"packageName":"colors","name":"rgb","moduleName":"Color","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Color` from integer RGB values between 0 and 255.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[167,1],"name":".spago/colors/v5.0.0/src/Color/Scale.purs","end":[167,65]},"score":0,"packageName":"colors","name":"mkSimpleSampler","moduleName":"Color.Scale","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color"],"Interpolator"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the color at a specific point on the color scale (number between 0 and\n1). If the number is smaller than 0, the color at 0 is returned. If the\nnumber is larger than 1, the color at 1 is returned.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[149,1],"name":".spago/colors/v5.0.0/src/Color/Scale.purs","end":[149,56]},"score":0,"packageName":"colors","name":"addStop'","moduleName":"Color.Scale","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a stop to a list of `ColorStops`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[145,1],"name":".spago/colors/v5.0.0/src/Color/Scale.purs","end":[145,55]},"score":0,"packageName":"colors","name":"addStop","moduleName":"Color.Scale","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorScale"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a stop to a color scale.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/colors/v5.0.0/src/Color/Scale.purs","end":[93,62]},"score":0,"packageName":"colors","name":"combineStops","moduleName":"Color.Scale","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]},{"tag":"TypeConstructor","contents":[["Color","Scale"],"ColorStops"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Concatenates two color scales. The first argument specifies the transition point as\na number between zero and one. The color right at the transition point is the first\ncolor of the second color scale.\n\nExample:\n\n``` purs\nredToBlue `combineStops 0.4` orangeToGray\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/colors/v5.0.0/src/Color/Blending.purs","end":[22,46]},"score":0,"packageName":"colors","name":"blend","moduleName":"Color.Blending","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color","Blending"],"BlendMode"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]},{"tag":"TypeConstructor","contents":[["Color"],"Color"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Blend two colors with a specified blend mode. The first color is the\nbackground color, the second one is the foreground color. The resulting\nalpha value is calculated as arithmetic mean.\n"}],"tag":"SearchResult"}]