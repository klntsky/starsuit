// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["982759851"] = [{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/react-basic-hooks/v2.0.1/src/React/Basic/Hooks/Internal.purs","end":[67,25]},"packageName":"react-basic-hooks","name":"coerceHook","moduleName":"React.Basic.Hooks.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["newHook",{"tag":"ForAll","contents":["oldHook",{"tag":"ForAll","contents":["hooks",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"newHook"},{"tag":"TypeVar","contents":"oldHook"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic","Hooks","Internal"],"Render"]},{"tag":"TypeVar","contents":"hooks"}]},{"tag":"TypeVar","contents":"oldHook"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic","Hooks","Internal"],"Render"]},{"tag":"TypeVar","contents":"hooks"}]},{"tag":"TypeVar","contents":"newHook"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Rename/alias a chain of hooks. Useful for exposing a single\n\"clean\" type when creating a hook to improve error messages\nand hide implementation details, particularly for libraries\nhiding internal info.\n\nFor example, the following alias is technically correct but\nwhen inspecting types or error messages the alias is expanded\nto the full original type and `UseAff` is never seen:\n\n```purs\ntype UseAff key a hooks\n  = UseEffect key (UseState (Result a) hooks)\n\nuseAff :: ... -> Hook (UseAff key a) (Result a)\nuseAff key aff = React.do\n  ...\n```\n\n`coerceHook` allows the same code to safely export a newtype\ninstead, hiding the internal implementation:\n\n```purs\nnewtype UseAff key a hooks\n  = UseAff (UseEffect key (UseState (Result a) hooks))\n\nderive instance ntUseAff :: Newtype (UseAff key a hooks) _\n\nuseAff :: ... -> Hook (UseAff key a) (Result a)\nuseAff key aff = coerceHook React.do\n  ...\n```\n\n\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/freedom/v1.2.0/src/Freedom/Renderer/Util.purs","end":[77,30]},"packageName":"freedom","name":"createElement_","moduleName":"Freedom.Renderer.Util","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["state",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Freedom","Renderer","Util"],"Affable"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"state"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Freedom","VNode"],"VObject"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]}]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/indexed-monad/v1.1.0/src/Data/Functor/Indexed.purs","end":[8,54]},"packageName":"indexed-monad","name":"ivoid","moduleName":"Data.Functor.Indexed","info":{"values":[{"type":{"tag":"ForAll","contents":["y",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor","Indexed"],"IxFunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]