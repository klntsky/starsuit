// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1037731163"] = [{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/halogen/v5.0.0-rc.7/src/Halogen/HTML.purs","end":[82,34]},"score":0,"packageName":"halogen","name":"memoized","moduleName":"Halogen.HTML","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["slots",{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML"],"ComponentHTML"]},{"tag":"TypeVar","contents":"action"}]},{"tag":"TypeVar","contents":"slots"}]},{"tag":"TypeVar","contents":"m"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML"],"ComponentHTML"]},{"tag":"TypeVar","contents":"action"}]},{"tag":"TypeVar","contents":"slots"}]},{"tag":"TypeVar","contents":"m"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Optimizes rendering of a subtree given an equality predicate. If an argument\nis deemed equivalent to the previous value, rendering and diffing will be\nskipped. You should not use this function fully saturated, but instead\npartially apply it for use within a Component's scope. For example, to skip\nrendering for equal states, just wrap your `render` function.\n\n```purescript\nmyComponent = component\n { render: memoized eq render\n , ...\n }\n```\n"}],"tag":"SearchResult"}]