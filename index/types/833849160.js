// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["833849160"] = [{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/unsafe-reference/v3.0.1/src/Unsafe/Reference.purs","end":[7,43]},"score":0,"packageName":"unsafe-reference","name":"unsafeRefEq","moduleName":"Unsafe.Reference","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compares two values of the same type using strict (`===`) equality.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[104,3],"name":".spago/smolder/v12.2.0/src/Text/Smolder/Markup.purs","end":[104,28]},"score":0,"packageName":"smolder","name":"with","moduleName":"Text.Smolder.Markup","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Text","Smolder","Markup"],"Attributable"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Smolder","Markup"],"Attributable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Smolder","Markup"],"Attribute"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":"Add an attribute to a markup node.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,3],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/String.purs","end":[22,24]},"score":0,"packageName":"parsing","name":"drop","moduleName":"Text.Parsing.Parser.String","info":{"values":[{"typeClassArguments":[["s",null]],"typeClass":[["Text","Parsing","Parser","String"],"StringLike"],"type":{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Parsing","Parser","String"],"StringLike"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,3],"name":".spago/format/v4.0.0/src/Text/Format.purs","end":[97,38]},"score":0,"packageName":"format","name":"format","moduleName":"Text.Format","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Text","Format"],"Format"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Text","Format"],"Format"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","Format"],"Properties"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/test-unit/v15.0.0/src/Test/Unit/QuickCheck.purs","end":[16,67]},"score":0,"packageName":"test-unit","name":"quickCheck'","moduleName":"Test.Unit.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["prop",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck"],"Testable"],"constraintArgs":[{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"prop"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/test-unit/v15.0.0/src/Test/Unit/Assert.purs","end":[60,58]},"score":0,"packageName":"test-unit","name":"shouldEqual","moduleName":"Test.Unit.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`shouldEqual` is equivalent to `equal`, with the arguments flipped,\nfor people who prefer the BDD style.\n\n    it \"should do what I expect of it\" do\n      result `shouldEqual` \"expected result\"\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/test-unit/v15.0.0/src/Test/Unit/Assert.purs","end":[38,52]},"score":0,"packageName":"test-unit","name":"equal","moduleName":"Test.Unit.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","Unit"],"Test"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Assert that two printable values are equal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[203,1],"name":".spago/strongcheck/v4.1.1/src/Test/StrongCheck.purs","end":[203,60]},"score":0,"packageName":"strongcheck","name":"assertNotEq","moduleName":"Test.StrongCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Asserts that two values are not equal, resulting in a `Failure` if they\nare, with a message showing the values involved.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[194,1],"name":".spago/strongcheck/v4.1.1/src/Test/StrongCheck.purs","end":[194,57]},"score":0,"packageName":"strongcheck","name":"assertEq","moduleName":"Test.StrongCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","StrongCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Asserts that two values are equal, resulting in a `Failure` if they are\nnot, with a message showing the values involved.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/strongcheck/v4.1.1/src/Test/StrongCheck/Perturb.purs","end":[73,48]},"score":0,"packageName":"strongcheck","name":"dist","moduleName":"Test.StrongCheck.Perturb","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","StrongCheck","Perturb"],"Perturb"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[272,1],"name":".spago/quickcheck/v6.1.0/src/Test/QuickCheck.purs","end":[272,69]},"score":0,"packageName":"quickcheck","name":"assertGreaterThanEq","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[267,1],"name":".spago/quickcheck/v6.1.0/src/Test/QuickCheck.purs","end":[267,67]},"score":0,"packageName":"quickcheck","name":"assertGreaterThan","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[262,1],"name":".spago/quickcheck/v6.1.0/src/Test/QuickCheck.purs","end":[262,66]},"score":0,"packageName":"quickcheck","name":"assertLessThanEq","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[257,1],"name":".spago/quickcheck/v6.1.0/src/Test/QuickCheck.purs","end":[257,64]},"score":0,"packageName":"quickcheck","name":"assertLessThan","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[251,1],"name":".spago/quickcheck/v6.1.0/src/Test/QuickCheck.purs","end":[251,64]},"score":0,"packageName":"quickcheck","name":"assertNotEquals","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Self-documenting inequality assertion\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[244,1],"name":".spago/quickcheck/v6.1.0/src/Test/QuickCheck.purs","end":[244,61]},"score":0,"packageName":"quickcheck","name":"assertEquals","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Self-documenting equality assertion\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/react/v8.0.0/src/React/DOM/Props.purs","end":[25,67]},"score":0,"packageName":"react","name":"unsafeMkProps","moduleName":"React.DOM.Props","info":{"values":[{"type":{"tag":"ForAll","contents":["val",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"val"}]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/psc-ide/v15.0.1/src/PscIde/Command.purs","end":[102,66]},"score":0,"packageName":"psc-ide","name":"commandWrapper","moduleName":"PscIde.Command","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/psc-ide/v15.0.1/src/PscIde/Command.purs","end":[56,72]},"score":0,"packageName":"psc-ide","name":"jsonSingletonObject'","moduleName":"PscIde.Command","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/psc-ide/v15.0.1/src/PscIde/Command.purs","end":[50,65]},"score":0,"packageName":"psc-ide","name":"filterWrapper","moduleName":"PscIde.Command","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/psa-utils/v6.0.0/src/Psa/Util.purs","end":[8,51]},"score":0,"packageName":"psa-utils","name":"replicate","moduleName":"Psa.Util","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/partial/v2.0.1/src/Partial/Unsafe.purs","end":[15,64]},"score":0,"packageName":"partial","name":"unsafePartialBecause","moduleName":"Partial.Unsafe","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"*deprecated:* use `unsafePartial` instead.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/express/v0.8.0/src/Node/Express/Response.purs","end":[115,43]},"score":0,"packageName":"express","name":"render","moduleName":"Node.Express.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Render a view with a view model object. Could be object, string, buffer, etc.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/express/v0.8.0/src/Node/Express/Response.purs","end":[33,54]},"score":0,"packageName":"express","name":"setResponseHeader","moduleName":"Node.Express.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set response header value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[178,1],"name":".spago/express/v0.8.0/src/Node/Express/Request.purs","end":[178,48]},"score":0,"packageName":"express","name":"setUserData","moduleName":"Node.Express.Request","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Sets the specified field of the userData object attached to the Request\nobject to specified data\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[187,1],"name":".spago/express/v0.8.0/src/Node/Express/App.purs","end":[187,57]},"score":0,"packageName":"express","name":"all","moduleName":"Node.Express.App","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Express","Types"],"RoutePattern"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","App"],"App"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Shortcut for `http ALL` (match on any http method).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[183,1],"name":".spago/express/v0.8.0/src/Node/Express/App.purs","end":[183,60]},"score":0,"packageName":"express","name":"delete","moduleName":"Node.Express.App","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Express","Types"],"RoutePattern"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","App"],"App"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Shortcut for `http DELETE`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[179,1],"name":".spago/express/v0.8.0/src/Node/Express/App.purs","end":[179,57]},"score":0,"packageName":"express","name":"put","moduleName":"Node.Express.App","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Express","Types"],"RoutePattern"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","App"],"App"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Shortcut for `http PUT`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[175,1],"name":".spago/express/v0.8.0/src/Node/Express/App.purs","end":[175,58]},"score":0,"packageName":"express","name":"post","moduleName":"Node.Express.App","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Express","Types"],"RoutePattern"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","App"],"App"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Shortcut for `http POST`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[171,1],"name":".spago/express/v0.8.0/src/Node/Express/App.purs","end":[171,57]},"score":0,"packageName":"express","name":"get","moduleName":"Node.Express.App","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Express","Types"],"RoutePattern"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"Handler"]}]},{"tag":"TypeConstructor","contents":[["Node","Express","App"],"App"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Shortcut for `http GET`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[160,1],"name":".spago/express/v0.8.0/src/Node/Express/App.purs","end":[160,40]},"score":0,"packageName":"express","name":"setProp","moduleName":"Node.Express.App","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Node","Express","App"],"App"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set application property.\nSee http://expressjs.com/4x/api.html#app-settings\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[558,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[561,34]},"score":0,"packageName":"httpure","name":"internalServerError'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"500 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[402,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[402,72]},"score":0,"packageName":"httpure","name":"conflict'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"409 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[330,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[330,74]},"score":0,"packageName":"httpure","name":"badRequest'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"400 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[317,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[317,81]},"score":0,"packageName":"httpure","name":"permanentRedirect'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"308 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[309,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[309,81]},"score":0,"packageName":"httpure","name":"temporaryRedirect'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"307 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[301,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[301,72]},"score":0,"packageName":"httpure","name":"useProxy'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"305 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[285,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[285,72]},"score":0,"packageName":"httpure","name":"seeOther'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"303 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[277,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[277,69]},"score":0,"packageName":"httpure","name":"found'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"302 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[269,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[269,80]},"score":0,"packageName":"httpure","name":"movedPermanently'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"301 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[261,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[261,79]},"score":0,"packageName":"httpure","name":"multipleChoices'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"300 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[249,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[249,70]},"score":0,"packageName":"httpure","name":"iMUsed'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"226 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[233,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[233,75]},"score":0,"packageName":"httpure","name":"multiStatus'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"207 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[225,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[225,78]},"score":0,"packageName":"httpure","name":"partialContent'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"206 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[198,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[201,42]},"score":0,"packageName":"httpure","name":"nonAuthoritativeInformation'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"203 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[174,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[174,66]},"score":0,"packageName":"httpure","name":"ok'","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Headers"],"Headers"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"200 with headers\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/httpure/v0.8.3/src/HTTPure/Response.purs","end":[112,69]},"score":0,"packageName":"httpure","name":"response","moduleName":"HTTPure.Response","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["HTTPure","Body"],"Body"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["HTTPure","Status"],"Status"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["HTTPure","Response"],"ResponseM"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"For custom response statuses or providing a body for response codes that\ndon't typically send one.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,3],"name":".spago/foreign/v5.0.0/src/Foreign/Index.purs","end":[32,47]},"score":0,"packageName":"foreign","name":"errorAt","moduleName":"Foreign.Index","info":{"values":[{"typeClassArguments":[["i",null]],"typeClass":[["Foreign","Index"],"Index"],"type":{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Index"],"Index"],"constraintArgs":[{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"ForeignError"]}]},{"tag":"TypeConstructor","contents":[["Foreign"],"ForeignError"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,3],"name":".spago/foreign/v5.0.0/src/Foreign/Index.purs","end":[31,44]},"score":0,"packageName":"foreign","name":"hasOwnProperty","moduleName":"Foreign.Index","info":{"values":[{"typeClassArguments":[["i",null]],"typeClass":[["Foreign","Index"],"Index"],"type":{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Index"],"Index"],"constraintArgs":[{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,3],"name":".spago/foreign/v5.0.0/src/Foreign/Index.purs","end":[30,41]},"score":0,"packageName":"foreign","name":"hasProperty","moduleName":"Foreign.Index","info":{"values":[{"typeClassArguments":[["i",null]],"typeClass":[["Foreign","Index"],"Index"],"type":{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Index"],"Index"],"constraintArgs":[{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,3],"name":".spago/foreign-generic/v10.0.0/src/Foreign/Generic/Enum.purs","end":[64,51]},"score":0,"packageName":"foreign-generic","name":"encodeEnum","moduleName":"Foreign.Generic.EnumEncoding","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Foreign","Generic","EnumEncoding"],"GenericEncodeEnum"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Generic","EnumEncoding"],"GenericEncodeEnum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign","Generic","EnumEncoding"],"GenericEnumOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[264,3],"name":".spago/foreign-generic/v10.0.0/src/Foreign/Generic/Class.purs","end":[264,40]},"score":0,"packageName":"foreign-generic","name":"encodeOpts","moduleName":"Foreign.Generic.Class","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Foreign","Generic","Class"],"GenericEncode"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Generic","Class"],"GenericEncode"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign","Generic","Class"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[206,3],"name":".spago/foreign-generic/v10.0.0/src/Foreign/Generic/Class.purs","end":[206,47]},"score":0,"packageName":"foreign-generic","name":"encodeWithOptions","moduleName":"Foreign.Generic.Class","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Foreign","Generic","Class"],"EncodeWithOptions"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Generic","Class"],"EncodeWithOptions"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign","Generic","Class"],"Options"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/debug/v4.0.0/src/Debug/Trace.purs","end":[36,65]},"score":0,"packageName":"debug","name":"spy","moduleName":"Debug.Trace","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Logs any value and returns it, using a \"tag\" or key value to annotate the\ntraced value. Useful when debugging something in the middle of a\nexpression, as you can insert this into the expression without having to\nbreak it up.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/datetime/v4.1.1/src/Data/Time.purs","end":[122,50]},"score":0,"packageName":"datetime","name":"diff","moduleName":"Data.Time","info":{"values":[{"type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Time"],"Time"]}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calculates the difference between two times, returning the result as a\nduration.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/prelude/v4.1.1/src/Data/Semiring.purs","end":[38,22]},"score":0,"packageName":"prelude","name":"mul","moduleName":"Data.Semiring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Semiring"],"Semiring"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,3],"name":".spago/prelude/v4.1.1/src/Data/Semiring.purs","end":[36,22]},"score":0,"packageName":"prelude","name":"add","moduleName":"Data.Semiring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Semiring"],"Semiring"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,3],"name":".spago/prelude/v4.1.1/src/Data/Semigroup.purs","end":[23,24]},"score":0,"packageName":"prelude","name":"append","moduleName":"Data.Semigroup","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Semigroup"],"Semigroup"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,3],"name":".spago/prelude/v4.1.1/src/Data/Ring.purs","end":[23,21]},"score":0,"packageName":"prelude","name":"sub","moduleName":"Data.Ring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Ring"],"Ring"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[165,38]},"score":0,"packageName":"prelude","name":"max","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Take the maximum of two values. If they are considered equal, the first\nargument is chosen.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[156,38]},"score":0,"packageName":"prelude","name":"min","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Take the minimum of two values. If they are considered equal, the first\nargument is chosen.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[140,56]},"score":0,"packageName":"prelude","name":"greaterThanOrEq","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _non-strictly greater than_ another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[128,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[128,52]},"score":0,"packageName":"prelude","name":"greaterThan","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _strictly greater than_ another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[134,53]},"score":0,"packageName":"prelude","name":"lessThanOrEq","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _non-strictly less than_ another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[122,49]},"score":0,"packageName":"prelude","name":"lessThan","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _strictly less than_ another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[38,32]},"score":0,"packageName":"prelude","name":"compare","moduleName":"Data.Ord","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Ord"],"Ord"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/prelude/v4.1.1/src/Data/Ord/Unsafe.purs","end":[9,26]},"score":0,"packageName":"prelude","name":"unsafeCompare","moduleName":"Data.Ord.Unsafe","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"'unsafeCompare' is deprecated."}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[96,3],"name":".spago/higher-order/v0.2.0/src/Data/Operator/Eq.purs","end":[96,34]},"score":0,"packageName":"higher-order","name":"genericEq1","moduleName":"Data.Operator.Eq","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Operator","Eq"],"GenericEq1"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Operator","Eq"],"GenericEq1"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/prelude/v4.1.1/src/Data/Monoid.purs","end":[73,49]},"score":0,"packageName":"prelude","name":"guard","moduleName":"Data.Monoid","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Allow or \"truncate\" a Monoid to its `mempty` value based on a condition.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/prelude/v4.1.1/src/Data/Monoid.purs","end":[62,45]},"score":0,"packageName":"prelude","name":"power","moduleName":"Data.Monoid","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append a value to itself a certain number of times. For the\n`Multiplicative` type, and for a non-negative power, this is the same as\nnormal number exponentiation.\n\nIf the second argument is negative this function will return `mempty`\n(*unlike* normal number exponentiation). The `Monoid` constraint alone\nis not enough to write a `power` function with the property that `power x\nn` cancels with `power x (-n)`, i.e. `power x n <> power x (-n) = mempty`.\nFor that, we would additionally need the ability to invert elements, i.e.\na Group.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,3],"name":".spago/prelude/v4.1.1/src/Data/HeytingAlgebra.purs","end":[44,22]},"score":0,"packageName":"prelude","name":"disj","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,3],"name":".spago/prelude/v4.1.1/src/Data/HeytingAlgebra.purs","end":[43,22]},"score":0,"packageName":"prelude","name":"conj","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,3],"name":".spago/prelude/v4.1.1/src/Data/HeytingAlgebra.purs","end":[42,25]},"score":0,"packageName":"prelude","name":"implies","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/group/v4.1.1/src/Data/Group.purs","end":[32,44]},"score":0,"packageName":"group","name":"power","moduleName":"Data.Group","info":{"values":[{"type":{"tag":"ForAll","contents":["g",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Group"],"Group"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeVar","contents":"g"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append a value (or its inverse) to itself a certain number of times.\n\nFor the `Additive Int` type, this is the same as multiplication.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/Semiring.purs","end":[10,30]},"score":0,"packageName":"generics-rep","name":"genericMul'","moduleName":"Data.Generic.Rep.Semiring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","Semiring"],"GenericSemiring"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","Semiring"],"GenericSemiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/Semiring.purs","end":[8,30]},"score":0,"packageName":"generics-rep","name":"genericAdd'","moduleName":"Data.Generic.Rep.Semiring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","Semiring"],"GenericSemiring"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","Semiring"],"GenericSemiring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/Semigroup.purs","end":[11,32]},"score":0,"packageName":"generics-rep","name":"genericAppend'","moduleName":"Data.Generic.Rep.Semigroup","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","Semigroup"],"GenericSemigroup"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","Semigroup"],"GenericSemigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/Ring.purs","end":[8,29]},"score":0,"packageName":"generics-rep","name":"genericSub'","moduleName":"Data.Generic.Rep.Ring","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","Ring"],"GenericRing"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","Ring"],"GenericRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/Ord.purs","end":[11,40]},"score":0,"packageName":"generics-rep","name":"genericCompare'","moduleName":"Data.Generic.Rep.Ord","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","Ord"],"GenericOrd"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","Ord"],"GenericOrd"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/HeytingAlgebra.purs","end":[13,30]},"score":0,"packageName":"generics-rep","name":"genericDisj'","moduleName":"Data.Generic.Rep.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","HeytingAlgebra"],"GenericHeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","HeytingAlgebra"],"GenericHeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/HeytingAlgebra.purs","end":[12,30]},"score":0,"packageName":"generics-rep","name":"genericConj'","moduleName":"Data.Generic.Rep.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","HeytingAlgebra"],"GenericHeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","HeytingAlgebra"],"GenericHeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/HeytingAlgebra.purs","end":[11,33]},"score":0,"packageName":"generics-rep","name":"genericImplies'","moduleName":"Data.Generic.Rep.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","HeytingAlgebra"],"GenericHeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","HeytingAlgebra"],"GenericHeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,3],"name":".spago/generics-rep/v6.1.1/src/Data/Generic/Rep/Eq.purs","end":[11,34]},"score":0,"packageName":"generics-rep","name":"genericEq'","moduleName":"Data.Generic.Rep.Eq","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Generic","Rep","Eq"],"GenericEq"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Generic","Rep","Eq"],"GenericEq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/formatters/v4.0.1/src/Data/Formatter/Internal.purs","end":[10,37]},"score":0,"packageName":"formatters","name":"repeat","moduleName":"Data.Formatter.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[94,1],"name":".spago/prelude/v4.1.1/src/Data/EuclideanRing.purs","end":[94,56]},"score":0,"packageName":"prelude","name":"lcm","moduleName":"Data.EuclideanRing","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The *least common multiple* of two values.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/prelude/v4.1.1/src/Data/EuclideanRing.purs","end":[87,56]},"score":0,"packageName":"prelude","name":"gcd","moduleName":"Data.EuclideanRing","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The *greatest common divisor* of two values.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,3],"name":".spago/prelude/v4.1.1/src/Data/EuclideanRing.purs","end":[66,21]},"score":0,"packageName":"prelude","name":"mod","moduleName":"Data.EuclideanRing","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","EuclideanRing"],"EuclideanRing"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,3],"name":".spago/prelude/v4.1.1/src/Data/EuclideanRing.purs","end":[65,21]},"score":0,"packageName":"prelude","name":"div","moduleName":"Data.EuclideanRing","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","EuclideanRing"],"EuclideanRing"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","EuclideanRing"],"EuclideanRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/prelude/v4.1.1/src/Data/Eq.purs","end":[35,45]},"score":0,"packageName":"prelude","name":"notEq","moduleName":"Data.Eq","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`notEq` tests whether one value is _not equal_ to another. Shorthand for\n`not (eq x y)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/prelude/v4.1.1/src/Data/Eq.purs","end":[29,26]},"score":0,"packageName":"prelude","name":"eq","moduleName":"Data.Eq","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Eq"],"Eq"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/prelude/v4.1.1/src/Data/DivisionRing.purs","end":[51,52]},"score":0,"packageName":"prelude","name":"rightDiv","moduleName":"Data.DivisionRing","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","DivisionRing"],"DivisionRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Right division, defined as `rightDiv a b = a * recip b`. Left and right\ndivision are distinct in this module because a `DivisionRing` is not\nnecessarily commutative.\n\nIf the type `a` is also a `EuclideanRing`, then this function is\nequivalent to `div` from the `EuclideanRing` class. When working\nabstractly, `div` should generally be preferred, unless you know that you\nneed your code to work with noncommutative rings.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/prelude/v4.1.1/src/Data/DivisionRing.purs","end":[40,51]},"score":0,"packageName":"prelude","name":"leftDiv","moduleName":"Data.DivisionRing","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","DivisionRing"],"DivisionRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Left division, defined as `leftDiv a b = recip b * a`. Left and right\ndivision are distinct in this module because a `DivisionRing` is not\nnecessarily commutative.\n\nIf the type `a` is also a `EuclideanRing`, then this function is\nequivalent to `div` from the `EuclideanRing` class. When working\nabstractly, `div` should generally be preferred, unless you know that you\nneed your code to work with noncommutative rings.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/datetime/v4.1.1/src/Data/DateTime.purs","end":[66,58]},"score":0,"packageName":"datetime","name":"diff","moduleName":"Data.DateTime","info":{"values":[{"type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calculates the difference between two date/time values, returning the\nresult as a duration.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/datetime/v4.1.1/src/Data/Date.purs","end":[114,50]},"score":0,"packageName":"datetime","name":"diff","moduleName":"Data.Date","info":{"values":[{"type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Date"],"Date"]}]},{"tag":"TypeVar","contents":"d"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Calculates the difference between two dates, returning the result as a\nduration.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/argonaut-generic/v5.0.0/src/Data/Argonaut/Encode/Generic/Rep.purs","end":[29,41]},"score":0,"packageName":"argonaut-generic","name":"encodeRepWith","moduleName":"Data.Argonaut.Encode.Generic.Rep","info":{"values":[{"typeClassArguments":[["r",null]],"typeClass":[["Data","Argonaut","Encode","Generic","Rep"],"EncodeRep"],"type":{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Generic","Rep"],"EncodeRep"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Types","Generic","Rep"],"Encoding"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/css/v4.0.0/src/CSS/Stylesheet.purs","end":[101,52]},"score":0,"packageName":"css","name":"prefixed","moduleName":"CSS.Stylesheet","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["CSS","Property"],"Val"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["CSS","Property"],"Prefixed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["CSS","Stylesheet"],"CSS"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/css/v4.0.0/src/CSS/Common.purs","end":[74,56]},"score":0,"packageName":"css","name":"call","moduleName":"CSS.Common","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[{"constraintClass":[["CSS","String"],"IsString"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Syntax for CSS function call.\n"}],"tag":"SearchResult"}]