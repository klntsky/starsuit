// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1676782613"] = [{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/concur-core/v0.4.1/src/Concur/Core/Gen.purs","end":[84,28]},"score":0,"packageName":"concur-core","name":"zipWidgetYield","moduleName":"Concur.Core.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Concur","Core","Gen"],"Gen"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"x"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Concur","Core","Gen"],"Gen"]},{"tag":"TypeVar","contents":"v"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeVar","contents":"x"}]}}]}}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a monadic generator into one that tags its output with successive unique integers\nCan also be specialised to :: WidgetGen v x a -> WidgetGen v (Tuple Int x) a\n"}],"tag":"SearchResult"}]