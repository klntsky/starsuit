// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1716748595"] = [{"values":[{"sourceSpan":{"start":[808,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,56]},"score":0,"packageName":"parsing","name":"alphaNum","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an alphabetical or numerical character.\nMatches any char that satisfies `Data.Char.Unicode.isAlphaNum`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[803,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,54]},"score":0,"packageName":"parsing","name":"letter","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an alphabetical character.  Matches any char that satisfies `Data.Char.Unicode.isAlpha`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[799,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,53]},"score":0,"packageName":"parsing","name":"space","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a space character.  Matches any char that satisfies `Data.Char.Unicode.isSpace`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[795,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,53]},"score":0,"packageName":"parsing","name":"upper","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an uppercase letter.  Matches any char that satisfies `Data.Char.Unicode.isUpper`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[791,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,56]},"score":0,"packageName":"parsing","name":"octDigit","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an octal digit.  Matches any char that satisfies `Data.Char.Unicode.isOctDigit`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[787,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,56]},"score":0,"packageName":"parsing","name":"hexDigit","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a hex digit.  Matches any char that satisfies `Data.Char.Unicode.isHexDigit`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[783,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,53]},"score":0,"packageName":"parsing","name":"digit","moduleName":"Text.Parsing.Parser.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a digit.  Matches any char that satisfies `Data.Char.Unicode.isDigit`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/spork/v1.0.0/src/Spork/Interpreter.purs","end":[60,47]},"score":0,"packageName":"spork","name":"basicEffect","moduleName":"Spork.Interpreter","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","Interpreter"],"Interpreter"]},{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]}]},{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]}]},{"tag":"TypeVar","contents":"i"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Runs `Eff` effects.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[119,1],"name":".spago/react-basic-hooks/v4.0.0/src/React/Basic/Hooks/Internal.purs","end":[120,39]},"score":0,"packageName":"react-basic-hooks","name":"Pure","moduleName":"React.Basic.Hooks.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["hooks",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic","Hooks","Internal"],"Render"]},{"tag":"TypeVar","contents":"hooks"}]},{"tag":"TypeVar","contents":"hooks"}]},{"tag":"TypeVar","contents":"a"}]},null]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Discards\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/querydsl/v0.10.1/src/QueryDsl/Expressions.purs","end":[67,49]},"score":0,"packageName":"querydsl","name":"not","moduleName":"QueryDsl.Expressions","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["QueryDsl"],"UnaryOperator"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/makkori/v1.0.0/src/Makkori.purs","end":[111,93]},"score":0,"packageName":"makkori","name":"_makeStaticMiddleware","moduleName":"Makkori","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn2"]},{"tag":"TypeConstructor","contents":[["Makkori"],"Path"]}]},{"tag":"TypeVar","contents":"options"}]},{"tag":"TypeConstructor","contents":[["Makkori"],"Middleware"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/halogen-vdom/v6.1.0/src/Halogen/VDom/Util.purs","end":[74,37]},"score":0,"packageName":"halogen-vdom","name":"unsafeDeleteAny","moduleName":"Halogen.VDom.Util","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Uncurried"],"EffectFn2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/halogen-vdom/v6.1.0/src/Halogen/VDom/Util.purs","end":[69,33]},"score":0,"packageName":"halogen-vdom","name":"unsafeHasAny","moduleName":"Halogen.VDom.Util","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/formatters/v4.0.1/src/Data/Formatter/Parser/Interval.purs","end":[75,59]},"score":0,"packageName":"formatters","name":"parseDateTime","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]