// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1049953078"] = [{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/halogen-formless/v1.0.0-rc.1/src/Formless/Retrieve.purs","end":[140,8]},"packageName":"halogen-formless","name":"GetAll","moduleName":"Formless.Retrieve","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r0",{"tag":"ForAll","contents":["form",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Heterogeneous","Mapping"],"HMap"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r0"},{"tag":"TypeVar","contents":"r1"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"form"},{"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"tag":"TypeVar","contents":"r0"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"form"},{"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"tag":"TypeVar","contents":"r1"}]}]}]},null]},null]},null]},"arguments":[["f",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type representing retrieving all of a particular field with the field's\nconstructor name. For internal use.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/halogen-formless/v1.0.0-rc.1/src/Formless/Internal/Transform.purs","end":[57,9]},"packageName":"halogen-formless","name":"countErrors","moduleName":"Formless.Internal.Transform","info":{"values":[{"type":{"tag":"ForAll","contents":["fxs",{"tag":"ForAll","contents":["fs",{"tag":"ForAll","contents":["form",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"fs"},{"tag":"TypeVar","contents":"fxs"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Formless","Internal","Transform"],"CountErrors"],"constraintArgs":[{"tag":"TypeVar","contents":"fxs"},{"tag":"TypeVar","contents":"fs"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"form"},{"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"fs"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"form"},{"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A helper function that will count all errors in a record\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/halogen-formless/v1.0.0-rc.1/src/Formless/Internal/Transform.purs","end":[47,13]},"packageName":"halogen-formless","name":"allTouched","moduleName":"Formless.Internal.Transform","info":{"values":[{"type":{"tag":"ForAll","contents":["fxs",{"tag":"ForAll","contents":["fs",{"tag":"ForAll","contents":["form",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","RowList"],"RowToList"],"constraintArgs":[{"tag":"TypeVar","contents":"fs"},{"tag":"TypeVar","contents":"fxs"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Formless","Internal","Transform"],"AllTouched"],"constraintArgs":[{"tag":"TypeVar","contents":"fxs"},{"tag":"TypeVar","contents":"fs"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"form"},{"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"fs"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"form"},{"tag":"TypeConstructor","contents":[["Prim"],"Record"]}]},{"tag":"TypeConstructor","contents":[["Formless","Types","Form"],"FormField"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A helper function that will count all errors in a record\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[179,1],"name":".spago/leibniz/v5.0.0/src/Data/Leibniz.purs","end":[179,61]},"packageName":"leibniz","name":"refute","moduleName":"Data.Leibniz","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Leibniz"],"Distinguish"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"b"},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Leibniz"],"~"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"r"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Refute a type equality for two types which are not definitionally equal.\n\nFor example, in the REPL:\n\n```\n> import Data.Leibniz\n\n> :type \\(l :: String ~ Int) -> refute l\nforall r. Leibniz String Int -> r\n\n> :type \\(l :: String ~ String) -> refute l\nError found:\n  Could not match type Unit with type Void\n```\n\nThe error message here is due to the way in which the `Distinguish` class decides\napartness.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[19,7],"name":".spago/subcategory/v0.2.0/src/Endofunctor/HasUnpoint.purs","end":[24,13]},"packageName":"subcategory","name":"unpoint","moduleName":"Control.Subcategory.Endofunctor.HasUnpoint","info":{"values":[{"typeClassArguments":["c","u"],"typeClass":[["Control","Subcategory","Endofunctor","HasUnpoint"],"HasUnpoint"],"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["u",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Subcategory","Endofunctor","HasUnpoint"],"HasUnpoint"],"constraintArgs":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"u"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Subcategory","Constituency"],"ObjectOf"],"constraintArgs":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"u"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Subcategory","Constituency"],"ObjectOf"],"constraintArgs":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"u"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]