// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["35722010"] = [{"values":[{"sourceSpan":{"start":[158,1],"name":".spago/react-basic/v11.0.0/src/React/Basic.purs","end":[164,4]},"packageName":"react-basic","name":"Self","moduleName":"React.Basic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["props",{"tag":"TypeVar","contents":"props"},{"tag":"RCons","contents":["state",{"tag":"TypeVar","contents":"state"},{"tag":"RCons","contents":["setState",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"RCons","contents":["setStateThen",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeVar","contents":"state"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"tag":"RCons","contents":["instance_",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponentInstance"]},{"tag":"TypeVar","contents":"props"}]},{"tag":"TypeVar","contents":"state"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},"arguments":[["props",null],["state",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"`Self` represents the component instance at a particular point in time.\n\n- `props`\n  - A snapshot of `props` taken when this `Self` was created.\n- `state`\n  - A snapshot of `state` taken when this `Self` was created.\n- `setState`\n  - Update the component's state using the given function.\n- `setStateThen`\n  - Update the component's state using the given function. The given effects are performed after any resulting rerenders are completed. Be careful to avoid using stale props or state in the effect callback. Use `readProps` or `readState` to aquire the latest values.\n- `instance_`\n  - Unsafe escape hatch to the underlying component instance (`this` in the JavaScript React paradigm). Avoid as much as possible, but it's still frequently better than rewriting an entire component in JavaScript.\n\n__*See also:* `ComponentSpec`, `send`, `capture`, `readProps`, `readState`__\n"}],"tag":"SearchResult"}]