// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1834475602"] = [{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/spec-discovery/v4.0.0/src/Test/Spec/Discovery.purs","end":[14,26]},"score":0,"packageName":"spec-discovery","name":"discover","moduleName":"Test.Spec.Discovery","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"Spec"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/signal/v10.1.0/src/Signal/Channel.purs","end":[19,45]},"score":0,"packageName":"signal","name":"channel","moduleName":"Signal.Channel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Signal","Channel"],"Channel"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a channel, which allows you to feed arbitrary values into a signal.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[403,1],"name":".spago/react-basic/v11.0.0/src/React/Basic.purs","end":[403,71]},"score":0,"packageName":"react-basic","name":"createContext","moduleName":"React.Basic","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic"],"ReactContext"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `ReactContext` given a default value. Use `provider` and `consumer`\nto provide and consume context values. Alternatively, use `contextProvider`\nand `contextConsumer` directly if a `ReactComponent` is required for interop.\n\n```purs\nrender self =\n  R.div_\n  [ R.button\n    { onClick: capture_ $ self.setState \\s -> s { counter = s.counter + 1 }\n    , children: [ R.text \"Tick!\" ]\n    }\n  , provider countContext self.state.counter\n    [ consumer countContext \\counter ->\n       [ R.text $ \"Ticks: \" <> (show counter)\n       ]\n    ]\n  ]\n```\n\n__*See also:* `provider`, `consumer`, React's documentation regarding Context__\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[183,1],"name":".spago/express/v0.8.0/src/Node/Express/Request.purs","end":[183,54]},"score":0,"packageName":"express","name":"getUserData","moduleName":"Node.Express.Request","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"HandlerM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Retrieves the data from the request set with previous call to `setUserData`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/express/v0.8.0/src/Node/Express/Request.purs","end":[51,55]},"score":0,"packageName":"express","name":"getBodyParam","moduleName":"Node.Express.Request","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"HandlerM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get param from request's body.\nNOTE: Not parsed by default, you must attach proper middleware\n      See http://expressjs.com/4x/api.html#req.body\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/express/v0.8.0/src/Node/Express/Request.purs","end":[61,56]},"score":0,"packageName":"express","name":"getQueryParam","moduleName":"Node.Express.Request","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"HandlerM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get param from query string (part of URL behind '?').\nIt could be any JS object, e.g. an array in case multiple repeating query\nparameters, or an object in case of nested query parameters (this\nparticular behavior depends on the type of query parser - 'simple' won't\nparse complex objects, see\nhttps://github.com/expressjs/express/blob/master/test/req.query.js)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/express/v0.8.0/src/Node/Express/Request.purs","end":[30,76]},"score":0,"packageName":"express","name":"getRouteParam","moduleName":"Node.Express.Request","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Express","Types"],"RequestParam"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Express","Handler"],"HandlerM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get route param value. If it is named route, e.g `/user/:id` then\n`getRouteParam \"id\"` return matched part of route. If it is\nregex route, e.g. `/user/(\\d+)` then `getRouteParam 1` return\npart that matched `(\\d+)` and `getRouteParam 0` return whole\nroute.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[154,1],"name":".spago/express/v0.8.0/src/Node/Express/App.purs","end":[154,46]},"score":0,"packageName":"express","name":"getProp","moduleName":"Node.Express.App","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Express","App"],"AppM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get application property.\nSee http://expressjs.com/4x/api.html#app-settings\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/freedom/v1.4.0/src/Freedom/Store.purs","end":[37,59]},"score":0,"packageName":"freedom","name":"createStore","moduleName":"Freedom.Store","info":{"values":[{"type":{"tag":"ForAll","contents":["state",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"state"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Freedom","Store"],"Store"]},{"tag":"TypeVar","contents":"state"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"This is for internal. Do not use it.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/refs/v4.1.0/src/Effect/Ref.purs","end":[18,52]},"score":0,"packageName":"refs","name":"new","moduleName":"Effect.Ref","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"TypeVar","contents":"s"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a new mutable reference containing the specified value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/avar/v3.0.0/src/Effect/AVar.purs","end":[40,31]},"score":0,"packageName":"avar","name":"new","moduleName":"Effect.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a fresh AVar with an initial value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/avar/v3.0.0/src/Effect/Aff/AVar.purs","end":[24,28]},"score":0,"packageName":"avar","name":"new","moduleName":"Effect.Aff.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a fresh AVar with an initial value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/chirashi/v1.0.0/src/Chirashi.purs","end":[33,76]},"score":0,"packageName":"chirashi","name":"readVariantError","moduleName":"Chirashi","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Chirashi"],"MatchKey"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Chirashi"],"VariantError"]},{"tag":"TypeVar","contents":"r"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Read a VariantError from a Error\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/chirashi/v1.0.0/src/Chirashi.purs","end":[29,66]},"score":0,"packageName":"chirashi","name":"readVariant","moduleName":"Chirashi","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Chirashi"],"MatchKey"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"r"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Read a Variant from a Error\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/biscotti-session/v0.1.1/src/Biscotti/Session.purs","end":[27,91]},"score":0,"packageName":"biscotti-session","name":"memoryStore","moduleName":"Biscotti.Session","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Decode","Class"],"DecodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Biscotti","Session","Store"],"SessionStore"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/biscotti-session/v0.1.1/src/Biscotti/Session/Store/Memory.purs","end":[42,83]},"score":0,"packageName":"biscotti-session","name":"new","moduleName":"Biscotti.Session.Store.Memory","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Decode","Class"],"DecodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Biscotti","Session","Store"],"SessionStore"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]