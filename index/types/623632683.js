// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["623632683"] = [{"values":[{"sourceSpan":{"start":[260,1],"name":".spago/spork/v1.0.0/src/Spork/App.purs","end":[265,38]},"score":0,"packageName":"spork","name":"makeWithSelector","moduleName":"Spork.App","info":{"values":[{"type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["model",{"tag":"ForAll","contents":["subs",{"tag":"ForAll","contents":["effects",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","Interpreter"],"Interpreter"]},{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"effects"}]},{"tag":"TypeVar","contents":"subs"}]}}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","App"],"App"]},{"tag":"TypeVar","contents":"effects"}]},{"tag":"TypeVar","contents":"subs"}]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","App"],"AppInstance"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"action"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Builds a running App given an `Interpreter` and a DOM selector.\n\n```purescript\nmain = do\n  inst <- App.makeWithSelector (basicAff `merge` never) app \"#app\"\n  _    <- inst.subscribe \\_ -> log \"Got a change!\"\n  inst.run\n```\n\nThe returned `AppInstance` has yet to run any initial effects. You may\nuse the opportunity to setup change handlers. Invoke `inst.run` when\nready to run initial effects.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[204,1],"name":".spago/spork/v1.0.0/src/Spork/App.purs","end":[209,38]},"score":0,"packageName":"spork","name":"make","moduleName":"Spork.App","info":{"values":[{"type":{"tag":"ForAll","contents":["action",{"tag":"ForAll","contents":["model",{"tag":"ForAll","contents":["subs",{"tag":"ForAll","contents":["effects",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","Interpreter"],"Interpreter"]},{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"effects"}]},{"tag":"TypeVar","contents":"subs"}]}}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","App"],"App"]},{"tag":"TypeVar","contents":"effects"}]},{"tag":"TypeVar","contents":"subs"}]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"action"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Spork","App"],"AppInstance"]},{"tag":"TypeVar","contents":"model"}]},{"tag":"TypeVar","contents":"action"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Builds a running App given an `Interpreter` and a parent DOM Node.\n\n```purescript\nexample domNode = do\n  inst <- App.make (basicAff `merge` never) app domNode\n  _    <- inst.subscribe \\_ -> log \"Got a change!\"\n  inst.run\n```\n\nThe returned `AppInstance` has yet to run any initial effects. You may\nuse the opportunity to setup change handlers. Invoke `inst.run` when\nready to run initial effects.\n"}],"tag":"SearchResult"}]