// This file was generated by purescript-docs-search.
window.DocsSearchIndex["43"] = [["b_",[{"values":[{"sourceSpan":{"start":[248,1],"name":".spago/halogen/v5.0.0-rc.6/src/Halogen/HTML/Elements.purs","end":[248,47]},"packageName":"halogen","name":"b_","moduleName":"Halogen.HTML.Elements","info":{"values":[{"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"i"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[869,1],"name":".spago/react-basic/v11.0.0/src/React/Basic/DOM/Generated.purs","end":[869,23]},"packageName":"react-basic","name":"b_","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_boolean",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/argonaut-traversals/v7.0.0/src/Data/Argonaut/Prisms.purs","end":[11,32]},"packageName":"argonaut-traversals","name":"_Boolean","moduleName":"Data.Argonaut.Prisms","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<!>",[{"values":[{"sourceSpan":{"start":[288,1],"name":".spago/optparse/v3.0.1/src/Options/Applicative/Internal.purs","end":[288,30]},"packageName":"optparse","name":"(<!>)","moduleName":"Options.Applicative.Internal","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["./=",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/higher-order/v0.2.0/src/Data/Operator/Eq.purs","end":[63,22]},"packageName":"higher-order","name":"(./=)","moduleName":"Data.Operator.Eq","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["+",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/prelude/v4.1.1/src/Data/Semiring.purs","end":[41,18]},"packageName":"prelude","name":"(+)","moduleName":"Data.Semiring","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/typelevel/v5.0.0/src/Data/Typelevel/Num/Ops.purs","end":[64,18]},"packageName":"typelevel","name":"(+)","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/expect-inferred/v2.0.0/src/ExpectTypes.purs","end":[8,29]},"packageName":"expect-inferred","name":"type (+)","moduleName":"ExpectInferred","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/typelevel-prelude/v5.0.0/src/Type/Row.purs","end":[23,28]},"packageName":"typelevel-prelude","name":"type (+)","moduleName":"Type.Row","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":"Applies a type alias of open rows to a set of rows. The primary use case\nthis operator is as convenient sugar for combining open rows without\nparentheses.\n```purescript\ntype Rows1 r = (a :: Int, b :: String | r)\ntype Rows2 r = (c :: Boolean | r)\ntype Rows3 r = (Rows1 + Rows2 + r)\ntype Rows4 r = (d :: String | Rows1 + Rows2 + r)\n```\n"}],"tag":"SearchResult"}]]]